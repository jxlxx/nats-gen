{{ define "Handlers"}}
{{ range .Endpoints }}
func (s *ServiceWrapper) {{ .OperationID }}(r micro.Request) {
{{ if .Subject.Deserialize}}{{ range .Subject.Parameters }}{{ .Name }}, {{ end }} err := deserialize{{.OperationID}}Subject(r.Subject())
	if err != nil {
	if err := r.Error("err", "subject deserialization error", nil); err != nil {
		fmt.Println(err)
	}	
	return
}
{{end}}{{ if .Payload.Deserialize}}{{ .Payload.Name }}, err := deserialize{{.OperationID}}Payload(r.Data())
	if err != nil {
	if err := r.Error("err", "payload deserialization error", nil); err != nil {
		fmt.Println(err)
	}	
	return
}
{{end}}
	s.Handler.{{ .OperationID }}(r{{ range .Subject.Parameters}}, {{.Name}}{{end}}{{ if .Payload.Deserialize}}, {{ .Payload.Name}} {{ end}})
}
{{ template "Deserializers" . }}
{{ end }}
{{ end }}
